{"version":3,"sources":["Components/ModalElement.js","Components/User.js","Components/Header.js","Components/PaginationComponent.js","Reducer/reducerFunction.js","Components/TableComponent.js","App.js","index.js"],"names":["ModalElement","props","useState","details","name","setName","email","setEmail","role","setRole","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","Form","Group","controlId","Label","Control","type","value","onChange","e","target","Button","variant","onClick","preventDefault","updateUser","onHide","update","Footer","User","user","setDeleteUser","delMultiple","isCheckedAll","isChecked","setIsChecked","modalShow","setModalShow","style","color","event","currentTarget","checked","className","marginRight","show","setCheck","checkAll","PaginationComponent","total","itemsPerPage","currentPage","onPageChange","totalPages","setTotalPages","useEffect","Math","ceil","paginationItems","useMemo","pages","i","push","Pagination","Item","active","Prev","disabled","Next","ACTIONS","reducer","state","action","filter","map","filterArray","payload","users","length","TableComponent","axios","get","then","res","dispatch","data","useReducer","AllUsers","totalItems","setTotalItems","setCurrentPage","search","setSearch","allId","setAllId","setCheckAll","userData","allUsers","toLowerCase","includes","slice","updatedUser","Container","Row","Col","xs","md","width","placeholder","Table","responsive","hover","cond","items","item","toggleCheckbox","sm","page","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9827414c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nexport default function ModalElement(props) {\r\n  //   return <div></div>;\r\n  function update(e) {\r\n    e.preventDefault();\r\n    props.updateUser({\r\n      id: props.details.id,\r\n      name: name,\r\n      email: email,\r\n      role: role,\r\n    });\r\n    props.onHide();\r\n  }\r\n  const [name, setName] = useState(props.details.name);\r\n  const [email, setEmail] = useState(props.details.email);\r\n  const [role, setRole] = useState(props.details.role);\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Edit User Details\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {/* <h4>Centered Modal</h4> */}\r\n        <Form>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>User Name</Form.Label>\r\n            {/* placeholder={props.user.name} */}\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>User Email</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>User Role</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={role}\r\n              onChange={(e) => {\r\n                setRole(e.target.value);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            onClick={(e) => {\r\n              update(e);\r\n            }}\r\n          >\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport ModalElement from \"./ModalElement\";\r\nfunction User({ user, setDeleteUser, delMultiple, isCheckedAll, updateUser }) {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const [modalShow, setModalShow] = useState(false);\r\n  return (\r\n    <>\r\n      <tr\r\n        // \"#169C7D\"\r\n        style={{\r\n          color: isCheckedAll ? \"#0275d8\" : isChecked ? \"#0275d8\" : \"black\",\r\n        }}\r\n      >\r\n        <td>\r\n          <input\r\n            type=\"checkbox\"\r\n            value={user.id}\r\n            onChange={(event) => {\r\n              setIsChecked(event.currentTarget.checked);\r\n              delMultiple(event.currentTarget.checked, user.id);\r\n            }}\r\n            checked={isCheckedAll ? isCheckedAll : isChecked}\r\n          />\r\n        </td>\r\n        <td>{user.name}</td>\r\n        <td>{user.email}</td>\r\n        <td>{user.role}</td>\r\n        <td>\r\n          <i\r\n            className=\"far fa-edit\"\r\n            style={{ marginRight: \"10px\" }}\r\n            onClick={() => setModalShow(true)}\r\n          ></i>\r\n          <i\r\n            className=\"fa fa-trash\"\r\n            onClick={() => {\r\n              setDeleteUser(user.id);\r\n            }}\r\n          ></i>\r\n        </td>\r\n      </tr>\r\n      <ModalElement\r\n        show={modalShow}\r\n        details={user}\r\n        updateUser={updateUser}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React from \"react\";\r\n\r\nexport default function Header({ setCheck, checkAll }) {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={(event) => {\r\n              checkAll(event.currentTarget.checked);\r\n            }}\r\n            checked={setCheck}\r\n          />\r\n        </th>\r\n        <th>Name</th>\r\n        <th>Role</th>\r\n        <th>Email</th>\r\n        <th>Actions</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n","// import { Pagination } from \"react-bootstrap\";\r\nimport React from \"react\";\r\n// import Pagination from \"react-bootstrap/Pagination\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport { useEffect, useState, useMemo } from \"react\";\r\n// import Pagination from \"react-bootstrap/Pagination\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nconst PaginationComponent = ({\r\n  total = 0,\r\n  itemsPerPage = 5,\r\n  currentPage = 1,\r\n  onPageChange,\r\n}) => {\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (total > 0 && itemsPerPage > 0)\r\n      setTotalPages(Math.ceil(total / itemsPerPage));\r\n  }, [total, itemsPerPage]);\r\n\r\n  const paginationItems = useMemo(() => {\r\n    const pages = [];\r\n\r\n    for (let i = 1; i <= totalPages; i++) {\r\n      pages.push(\r\n        <Pagination.Item\r\n          key={i}\r\n          active={i === currentPage}\r\n          onClick={() => onPageChange(i)}\r\n        >\r\n          {i}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n    // console.log(pages);\r\n    return pages;\r\n  }, [totalPages, currentPage, onPageChange]);\r\n\r\n  if (totalPages === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Pagination>\r\n      <Pagination.Prev\r\n        onClick={() => onPageChange(currentPage - 1)}\r\n        disabled={currentPage === 1}\r\n      />\r\n      {paginationItems}\r\n      <Pagination.Next\r\n        onClick={() => onPageChange(currentPage + 1)}\r\n        disabled={currentPage === totalPages}\r\n      />\r\n    </Pagination>\r\n  );\r\n};\r\n\r\nexport default PaginationComponent;\r\n","const ACTIONS = {\r\n  DELETE_ONE: \"delete_one\",\r\n  DELETE_MULTIPLE: \"delete_multiple\",\r\n  ERROR: \"error\",\r\n  DELETE_ALL: \"delete_all\",\r\n  UPDATE_USER: \"update_user\",\r\n  GET_DATA: \"get_data\",\r\n};\r\nexport function reducer(state, action) {\r\n  switch (action.type) {\r\n    case ACTIONS.DELETE_ONE:\r\n      return state.filter((user) => {\r\n        return user.id !== action.id;\r\n      });\r\n    case ACTIONS.UPDATE_USER:\r\n      return state.map((user) => {\r\n        if (user.id === action.filterArray.id) {\r\n          user.name = action.filterArray.name;\r\n          user.email = action.filterArray.email;\r\n          user.role = action.filterArray.role;\r\n        }\r\n        return user;\r\n      });\r\n\r\n    case ACTIONS.GET_DATA:\r\n      return action.payload.users;\r\n    case ACTIONS.DELETE_MULTIPLE:\r\n      for (let i = 0; i < action.filterArray.length; i++) {\r\n        state = state.filter((user) => {\r\n          return user.id !== action.filterArray[i];\r\n        });\r\n      }\r\n      return state;\r\n    case ACTIONS.DELETE_ALL:\r\n      for (let i = 0; i < action.filterArray.length; i++) {\r\n        state = state.filter((user) => {\r\n          return user.id !== action.filterArray[i].id;\r\n        });\r\n      }\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// export default Reducer;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { useMemo, useState, useEffect, useReducer } from \"react\";\r\nimport User from \"./User\";\r\nimport Header from \"./Header\";\r\nimport PaginationComponent from \"./PaginationComponent\";\r\nimport { reducer } from \"../Reducer/reducerFunction\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nconst BASE_URL =\r\n  \"https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json\";\r\n\r\nfunction TableComponent() {\r\n  useEffect(() => {\r\n    axios.get(BASE_URL).then((res) => {\r\n      dispatch({\r\n        type: \"get_data\",\r\n        payload: { users: res.data },\r\n      });\r\n    });\r\n  }, []);\r\n  // const clear = createContext();\r\n  const [AllUsers, dispatch] = useReducer(reducer, []);\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [allId, setAllId] = useState([]);\r\n  const [checkAll, setCheckAll] = useState(false);\r\n  const ITEMS_PER_PAGE = 10;\r\n  const userData = useMemo(() => {\r\n    let allUsers = AllUsers;\r\n    setTotalItems(allUsers.length);\r\n    if (search) {\r\n      allUsers = allUsers.filter(\r\n        (user) =>\r\n          user.name.toLowerCase().includes(search.toLowerCase()) ||\r\n          user.email.toLowerCase().includes(search.toLowerCase()) ||\r\n          user.role.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n      setTotalItems(allUsers.length);\r\n    }\r\n\r\n    return allUsers.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [AllUsers, currentPage, search]);\r\n\r\n  if (AllUsers.length > 0 && userData.length === 0 && currentPage > 1)\r\n    setCurrentPage(currentPage - 1);\r\n  const toggleCheckbox = (e, target) => {\r\n    if (e) {\r\n      setAllId([...allId, target]);\r\n    } else {\r\n      let items = allId.filter((item) => {\r\n        return item !== target;\r\n      });\r\n      setAllId(items);\r\n    }\r\n  };\r\n  function updateUser(updatedUser) {\r\n    dispatch({ type: \"update_user\", filterArray: updatedUser });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center\">ADMIN TABLE</h1>\r\n      <Container variant=\"secondary\">\r\n        {AllUsers.length > 0 ? (\r\n          <Row className=\"row justify-content-md-center\">\r\n            <Col xs={12} md={5}>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                style={{ width: \"240px\" }}\r\n                placeholder=\"Search\"\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n              <Button\r\n                onClick={() => {\r\n                  setSearch(\"\");\r\n                }}\r\n              >\r\n                Clear Search\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        ) : null}\r\n        <Row className=\"row justify-content-md-center\">\r\n          {userData.length > 0 ? (\r\n            <Table responsive hover>\r\n              <Header\r\n                setCheck={checkAll}\r\n                checkAll={(cond) => {\r\n                  setCheckAll(cond);\r\n                }}\r\n              />\r\n\r\n              <tbody>\r\n                {\r\n                  <>\r\n                    {userData.map((user) => {\r\n                      return (\r\n                        <User\r\n                          key={user.id}\r\n                          user={user}\r\n                          setDeleteUser={(id) => {\r\n                            dispatch({ type: \"delete_one\", id: id });\r\n                            setSearch(\"\");\r\n                          }}\r\n                          delMultiple={(e, id) => {\r\n                            toggleCheckbox(e, id);\r\n                          }}\r\n                          isCheckedAll={checkAll}\r\n                          updateUser={updateUser}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </>\r\n                }\r\n              </tbody>\r\n            </Table>\r\n          ) : AllUsers.length === 0 ? (\r\n            <h1>NO USERSs</h1>\r\n          ) : totalItems === 0 ? (\r\n            <h1>NO RESULTS FOR '{search}'</h1>\r\n          ) : (\r\n            <h1>Loading</h1>\r\n          )}\r\n        </Row>\r\n        <Row className=\"row justify-content-md-center\">\r\n          <Col sm={12} md={5}>\r\n            {AllUsers.length > 0 && totalItems > 0 ? (\r\n              <Button\r\n                variant=\"danger\"\r\n                onClick={() => {\r\n                  checkAll\r\n                    ? dispatch({ type: \"delete_all\", filterArray: userData })\r\n                    : dispatch({ type: \"delete_multiple\", filterArray: allId });\r\n                  setCheckAll(false);\r\n                  setSearch(\"\");\r\n                }}\r\n              >\r\n                Delete Selected\r\n              </Button>\r\n            ) : null}\r\n          </Col>\r\n          <Col>\r\n            {AllUsers.length > 0 && totalItems > 0 ? (\r\n              <PaginationComponent\r\n                total={totalItems}\r\n                itemsPerPage={ITEMS_PER_PAGE}\r\n                currentPage={currentPage}\r\n                onPageChange={(page) => setCurrentPage(page)}\r\n              />\r\n            ) : null}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableComponent;\r\n","import React from \"react\";\r\nimport TableComponent from \"./Components/TableComponent\";\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <TableComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVi/tals();\n"],"sourceRoot":""}