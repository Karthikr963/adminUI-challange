{"version":3,"sources":["Components/ModalElement.js","Components/User.js","Components/Header.js","Components/PaginationComponent.js","Reducer/reducerFunction.js","Components/TableComponent.js","App.js","index.js"],"names":["ModalElement","props","contextData","useContext","userUpdateContext","useState","details","name","setName","email","setEmail","role","setRole","Modal","animation","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","Form","Group","Label","Control","type","value","onChange","e","target","Button","variant","onClick","preventDefault","updateuser","onHide","Footer","User","user","setDeleteUser","delMultiple","isCheckedAll","isChecked","setIsChecked","modalShow","setModalShow","style","color","event","currentTarget","checked","className","marginRight","show","setCheck","checkAll","PaginationComponent","total","itemsPerPage","currentPage","onPageChange","totalPages","setTotalPages","useEffect","Math","ceil","paginationItems","useMemo","pages","i","push","Pagination","Item","active","Prev","disabled","Next","ACTIONS","reducer","state","action","filter","map","filterArray","payload","users","length","React","createContext","TableComponent","axios","get","then","res","dispatch","data","catch","err","setLoadError","useReducer","loadError","setTotalUsers","setCurrentPage","search","setSearch","allId","setAllId","setCheckAll","userPerPage","allUsers","toLowerCase","includes","slice","updateUser","updatedUser","Container","Row","Col","InputGroup","width","placeholder","Table","responsive","hover","cond","Provider","items","item","toggleCheckbox","lg","page","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bf1f55d.chunk.js","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { userUpdateContext } from \"./TableComponent\";\r\nexport default function ModalElement(props) {\r\n  const contextData = useContext(userUpdateContext);\r\n  const [name, setName] = useState(props.details.name);\r\n  const [email, setEmail] = useState(props.details.email);\r\n  const [role, setRole] = useState(props.details.role);\r\n\r\n  return (\r\n    <Modal\r\n      animation={false}\r\n      {...props}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Edit User Details\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Label>User Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>User Email</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>User Role</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={role}\r\n              onChange={(e) => {\r\n                setRole(e.target.value);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              contextData.updateuser({\r\n                id: props.details.id,\r\n                name: name,\r\n                email: email,\r\n                role: role,\r\n              });\r\n              props.onHide();\r\n            }}\r\n          >\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport ModalElement from \"./ModalElement\";\r\nfunction User({ user, setDeleteUser, delMultiple, isCheckedAll }) {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const [modalShow, setModalShow] = useState(false);\r\n  return (\r\n    <>\r\n      <tr\r\n        // \"#169C7D\"\r\n        style={{\r\n          color: isCheckedAll ? \"#0275d8\" : isChecked ? \"#0275d8\" : \"black\",\r\n        }}\r\n      >\r\n        <td>\r\n          <input\r\n            type=\"checkbox\"\r\n            value={user.id}\r\n            onChange={(event) => {\r\n              setIsChecked(event.currentTarget.checked);\r\n              delMultiple(event.currentTarget.checked, user.id);\r\n            }}\r\n            checked={isCheckedAll ? isCheckedAll : isChecked}\r\n          />\r\n        </td>\r\n        <td>{user.name}</td>\r\n        <td>{user.email}</td>\r\n        <td>{user.role}</td>\r\n        <td>\r\n          <i\r\n            className=\"far fa-edit\"\r\n            style={{ marginRight: \"10px\" }}\r\n            onClick={() => setModalShow(true)}\r\n          ></i>\r\n          <i\r\n            className=\"fa fa-trash\"\r\n            onClick={() => {\r\n              setDeleteUser(user.id);\r\n            }}\r\n          ></i>\r\n        </td>\r\n      </tr>\r\n      <ModalElement\r\n        show={modalShow}\r\n        details={user}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React from \"react\";\r\n\r\nexport default function Header({ setCheck, checkAll }) {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={(event) => {\r\n              checkAll(event.currentTarget.checked);\r\n            }}\r\n            checked={setCheck}\r\n          />\r\n        </th>\r\n        <th>Name</th>\r\n        <th>Role</th>\r\n        <th>Email</th>\r\n        <th>Actions</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport { useEffect, useState, useMemo } from \"react\";\r\nfunction PaginationComponent({\r\n  total = 0,\r\n  itemsPerPage = 5,\r\n  currentPage = 1,\r\n  onPageChange,\r\n}) {\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (total > 0 && itemsPerPage > 0)\r\n      setTotalPages(Math.ceil(total / itemsPerPage));\r\n  }, [total, itemsPerPage]);\r\n\r\n  const paginationItems = useMemo(() => {\r\n    const pages = [];\r\n\r\n    for (let i = 1; i <= totalPages; i++) {\r\n      pages.push(\r\n        <Pagination.Item\r\n          key={i}\r\n          active={i === currentPage}\r\n          onClick={() => onPageChange(i)}\r\n        >\r\n          {i}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n    // console.log(pages);\r\n    return pages;\r\n  }, [totalPages, currentPage, onPageChange]);\r\n\r\n  if (totalPages === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Pagination size=\"lg\">\r\n      <Pagination.Prev\r\n        onClick={() => onPageChange(currentPage - 1)}\r\n        disabled={currentPage === 1}\r\n      />\r\n      {paginationItems}\r\n      <Pagination.Next\r\n        onClick={() => onPageChange(currentPage + 1)}\r\n        disabled={currentPage === totalPages}\r\n      />\r\n    </Pagination>\r\n  );\r\n}\r\n\r\nexport default PaginationComponent;\r\n","const ACTIONS = {\r\n  DELETE_ONE: \"delete_one\",\r\n  DELETE_MULTIPLE: \"delete_multiple\",\r\n  ERROR: \"error\",\r\n  DELETE_ALL: \"delete_all\",\r\n  UPDATE_USER: \"update_user\",\r\n  GET_DATA: \"get_data\",\r\n};\r\nexport function reducer(state, action) {\r\n  switch (action.type) {\r\n    case ACTIONS.DELETE_ONE:\r\n      return state.filter((user) => {\r\n        return user.id !== action.id;\r\n      });\r\n    case ACTIONS.UPDATE_USER:\r\n      return state.map((user) => {\r\n        if (user.id === action.filterArray.id) {\r\n          user.name = action.filterArray.name;\r\n          user.email = action.filterArray.email;\r\n          user.role = action.filterArray.role;\r\n        }\r\n        return user;\r\n      });\r\n\r\n    case ACTIONS.GET_DATA:\r\n      return action.payload.users;\r\n    case ACTIONS.DELETE_MULTIPLE:\r\n      for (let i = 0; i < action.filterArray.length; i++) {\r\n        state = state.filter((user) => {\r\n          return user.id !== action.filterArray[i];\r\n        });\r\n      }\r\n      return state;\r\n    case ACTIONS.DELETE_ALL:\r\n      for (let i = 0; i < action.filterArray.length; i++) {\r\n        state = state.filter((user) => {\r\n          return user.id !== action.filterArray[i].id;\r\n        });\r\n      }\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// export default Reducer;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  InputGroup,\r\n} from \"react-bootstrap\";\r\nimport { useMemo, useState, useEffect, useReducer } from \"react\";\r\nimport User from \"./User\";\r\nimport Header from \"./Header\";\r\nimport PaginationComponent from \"./PaginationComponent\";\r\nimport { reducer } from \"../Reducer/reducerFunction\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nexport let userUpdateContext = React.createContext();\r\nconst BASE_URL =\r\n  \"https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json\";\r\n\r\nfunction TableComponent() {\r\n  useEffect(() => {\r\n    axios\r\n      .get(BASE_URL)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: \"get_data\",\r\n          payload: { users: res.data },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setLoadError(true);\r\n      });\r\n  }, []);\r\n  const [users, dispatch] = useReducer(reducer, []);\r\n  const [loadError, setLoadError] = useState(false);\r\n  const [total, setTotalUsers] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  //id's of multiple checked box\r\n  const [allId, setAllId] = useState([]);\r\n  const [checkAll, setCheckAll] = useState(false);\r\n  const ITEMS_PER_PAGE = 10;\r\n  const userPerPage = useMemo(() => {\r\n    let allUsers = users;\r\n    setTotalUsers(allUsers.length);\r\n    if (search) {\r\n      allUsers = allUsers.filter(\r\n        (user) =>\r\n          user.name.toLowerCase().includes(search.toLowerCase()) ||\r\n          user.email.toLowerCase().includes(search.toLowerCase()) ||\r\n          user.role.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n      setTotalUsers(allUsers.length);\r\n    }\r\n\r\n    return allUsers.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [users, currentPage, search]);\r\n\r\n  if (users.length > 0 && userPerPage.length === 0 && currentPage > 1)\r\n    setCurrentPage(currentPage - 1);\r\n  const toggleCheckbox = (e, target) => {\r\n    if (e) {\r\n      setAllId([...allId, target]);\r\n    } else {\r\n      let items = allId.filter((item) => {\r\n        return item !== target;\r\n      });\r\n      setAllId(items);\r\n    }\r\n  };\r\n  const updateUser = (updatedUser) => {\r\n    dispatch({ type: \"update_user\", filterArray: updatedUser });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center car\">ADMIN TABLE</h1>\r\n      {loadError ? <h1>CANNOT LOAD USERS</h1> : null}\r\n      <Container size=\"lg\">\r\n        {users.length > 0 ? (\r\n          <Row className=\"row\">\r\n            <Col className=\"form-group col-lg-4\">\r\n              <InputGroup className=\"mb-1\" size=\"lg\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  style={{ width: \"100%\" }}\r\n                  placeholder=\"Search By Name,Email,Role\"\r\n                  value={search}\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                />\r\n              </InputGroup>\r\n            </Col>\r\n            <Col className=\"col-lg-6\">\r\n              <Button\r\n                size=\"lg\"\r\n                className=\"car\"\r\n                onClick={() => {\r\n                  setSearch(\"\");\r\n                }}\r\n              >\r\n                Clear Search\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        ) : null}\r\n        <Row className=\"row h-70\">\r\n          <Table responsive hover size=\"lg\">\r\n            <Header\r\n              setCheck={checkAll}\r\n              checkAll={(cond) => {\r\n                setCheckAll(cond);\r\n              }}\r\n            />\r\n\r\n            {users.length === 0 ? null : userPerPage.length > 0 ? (\r\n              <tbody>\r\n                {\r\n                  <>\r\n                    {userPerPage.map((user) => {\r\n                      return (\r\n                        <userUpdateContext.Provider\r\n                          key={user.id}\r\n                          value={{ updateuser: updateUser }}\r\n                        >\r\n                          <User\r\n                            key={user.id}\r\n                            user={user}\r\n                            setDeleteUser={(id) => {\r\n                              dispatch({ type: \"delete_one\", id: id });\r\n                              setSearch(\"\");\r\n                            }}\r\n                            delMultiple={(e, id) => {\r\n                              toggleCheckbox(e, id);\r\n                            }}\r\n                            isCheckedAll={checkAll}\r\n                          />\r\n                        </userUpdateContext.Provider>\r\n                      );\r\n                    })}\r\n                  </>\r\n                }\r\n              </tbody>\r\n            ) : null}\r\n          </Table>\r\n          {users.length === 0 ? (\r\n            <h1 className=\"text-center\">NO USERS TO DISPLAY</h1>\r\n          ) : total === 0 ? (\r\n            <h1 className=\"text-center\">NO RESULTS FOR '{search}'</h1>\r\n          ) : null}\r\n        </Row>\r\n        {/* <Row className=\"row justify-content-md-center\"> */}\r\n        <Row>\r\n          <Col lg={6}>\r\n            {users.length > 0 && total > 0 ? (\r\n              <Button\r\n                size=\"lg\"\r\n                variant=\"danger\"\r\n                onClick={() => {\r\n                  checkAll\r\n                    ? dispatch({ type: \"delete_all\", filterArray: userPerPage })\r\n                    : dispatch({ type: \"delete_multiple\", filterArray: allId });\r\n                  setCheckAll(false);\r\n                  setSearch(\"\");\r\n                }}\r\n              >\r\n                Delete Selected\r\n              </Button>\r\n            ) : null}\r\n          </Col>\r\n          <Col lg={6}>\r\n            {users.length > 0 && total > 0 ? (\r\n              <PaginationComponent\r\n                total={total}\r\n                // style={{ width: \"10px\" }}\r\n                itemsPerPage={ITEMS_PER_PAGE}\r\n                currentPage={currentPage}\r\n                onPageChange={(page) => setCurrentPage(page)}\r\n              />\r\n            ) : null}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableComponent;\r\n","import React from \"react\";\r\nimport TableComponent from \"./Components/TableComponent\";\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <TableComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVi/tals();\n"],"sourceRoot":""}